# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FoFa.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#导入程序运行必须模块
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow
from fofa_search import Ui_WizardPage
import time
import os
import requests
import json
import base64
import getpass
import urllib.request
import re


show_message = '''title="beijing"\t\t\t从标题中搜索“北京”	
header="jboss"\t\t\t从http头中搜索“jboss”	
body="Hacked by"\t\t\t从html正文中搜索abc	
domain="qq.com"\t\t\t搜索根域名带有qq.com的网站	
icon_hash="-247388890"\t\t搜索使用此icon的资产
host=".gov.cn"\t\t\t从url中搜索”.gov.cn”	
port="443"\t\t\t\t查找对应“443”端口的资产
ip="1.1.1.1"\t\t\t\t从ip中搜索包含“1.1.1.1”的网站	
ip="220.181.111.1/24"\t\t\t查询IP为“220.181.111.1”的C网段资产	
status_code="402"\t\t\t查询服务器状态为“402”的资产	
protocol="https"\t\t\t查询https协议资产	
city="Hangzhou"\t\t\t搜索指定城市的资产
region="Zhejiang"\t\t\t搜索指定行政区的资产
country="CN"\t\t\t搜索指定国家(编码)的资产	
banner=users && protocol=ftp\t\t搜索FTP协议中带有users文本的资产
os=windows\t\t\t\t搜索Windows资产。	
server=="Microsoft-IIS/7.5"\t\t搜索IIS 7.5服务器	
app="HIKVISION-视频监控"\t\t搜索海康威视设备	
asn="19551"\t\t\t\t搜索指定asn的资产	
org="Amazon.com, Inc."\t\t\t搜索指定org(组织)的资产
base_protocol="udp"\t\t\t搜索指定udp协议的资产	
is_domain=true\t\t\t搜索域名的资产	
ip_ports="80,161"\t\t\t搜索同时开放80和161端口的ip	
port_size="6"\t\t\t查询开放端口数量等于"6"的资产	
port_size_gt="3"\t\t\t查询开放端口数量大于"3"的资产	
port_size_lt="12"\t\t\t查询开放端口数量小于"12"的资产	
ip_country="CN"\t\t\t搜索中国的ip资产(以ip为单位的资产数据)
ip_city="Hangzhou"\t\t\t搜索指定城市的ip资产(以ip为单位的资产数据)'''


class MyMainForm(QMainWindow, Ui_WizardPage):
	def __init__(self,parent=None):
		Ui_WizardPage.__init__(self)
		self.now = time.strftime("%m_%d_%H_%M")
		self.os_name = getpass.getuser()
		self.Results = 0
		self.search_num = 10000
		super(MyMainForm, self).__init__(parent)
		self.setupUi(self)
		self.page=0
		#配置Search Button
		self.Search.clicked.connect(self.search)
		#配置Save Button
		self.Save.clicked.connect(self.save)
		#配置last_page Button
		self.Last_page.clicked.connect(self.last_page)
		#配置next_page Button
		self.Next_page.clicked.connect(self.next_page)
	def search(self):
		self.page = 1
		fofa_search = self.Search_key.text()
		self.Result.setText("")
		if fofa_search == "":
			self.Result.setText(show_message)
		else:
			bs64_fofa_search = base64.b64encode(fofa_search.encode('utf-8'))		#对搜索进行base64编码
			url_key = str(bs64_fofa_search,'utf-8')									
			all_url = "https://fofa.so/api/v1/search/all?email=%s&key=%s&qbase64=%s&size=%s" % (self.email,self.key,url_key,self.search_num) #编码完毕后构造完整请求url
			try:
				request_result = requests.get(all_url)				#网页对象
				self.fofa_result = json.loads(request_result.text)		#网页对象转内容再转字典
				self.result_num = len(self.fofa_result['results'])		#总共获取的数量
				if self.result_num > 50:
					for i in range(0,50):
						self.Result.append(str(self.fofa_result['results'][i][0]))
				else:
					for i in range(0,self.result_num):
						self.Result.append(str(self.fofa_result['results'][i][0]))
				if self.result_num/50 > int(self.result_num/50):
					self.all_page = int(self.result_num/50) + 1
				else:
					self.all_page = int(self.result_num/50)
				self.Show_message.setText("本次搜索结果共有 %s 个, 一共有 %s 页, 当前为第 %s 页。" % (str(self.result_num),str(self.all_page),str(self.page)))
				self.Results = 1
			except requests.RequestException as e:
				self.Show_message.append("网络异常，请检查网络。")
				self.Results = 2
			
	def next_page(self):
		self.page += 1
		fofa_search = self.Search_key.text()
		if fofa_search == "":
			self.Result.setText(show_message)
		elif self.Results == 0:
			self.Result.setText("请进行搜索后点击翻页。")
		elif self.all_page == 1:
			self.Result.setText("")
			for i in range(0,self.result_num):
				self.Result.append(str(self.fofa_result['results'][i][0]))
			self.Show_message.setText("当前为全部搜索结果。")
		elif self.page < self.all_page:
			self.Show_message.setText("当前为第 %s 页。" % str(self.page))
			self.Result.setText("")
			for i in range((self.page-1)*50,self.page*50):
				self.Result.append(str(self.fofa_result['results'][i][0]))
		else:
			self.page = self.all_page
			self.Show_message.setText("当前为最后一页。")
			self.Result.setText("")
			for i in range((self.all_page-1)*50,self.result_num):
				self.Result.append(str(self.fofa_result['results'][i][0]))

	def last_page(self):
		fofa_search = self.Search_key.text()
		if fofa_search == "":
			self.Result.setText(show_message)
			self.Show_message.setText("")
		elif self.Results == 0:
			self.Result.setText("请进行搜索后点击翻页。")
			self.Show_message.setText("")
		elif self.all_page == 1:
			self.Result.setText("")
			for i in range(0,self.result_num):
				self.Result.append(str(self.fofa_result['results'][i][0]))
			self.Show_message.setText("当前为全部搜索结果。")
		elif self.page == 1:
			self.Show_message.setText("")
			self.Show_message.setText("当前已经为第一页了。")
		else:
			self.page -= 1
			self.Show_message.setText("当前为第 %s 页。" % str(self.page))
			self.Result.setText("")
			for i in range((self.page-1)*50,self.page*50):
				self.Result.append(str(self.fofa_result['results'][i][0]))

	def save(self):
		self.time_now = time.strftime("%m_%d_%H_%M_%S", time.localtime())
		self.save_pwd = "/Users/"+ str(self.os_name) +"/Desktop/"
		self.save_name = self.Save_name.text()
		self.all_path = self.save_pwd + self.save_name + "_" + str(self.time_now) + ".txt"
		fofa_search = self.Search_key.text()
		if fofa_search == "":
			self.Result.setText(show_message)
			self.Show_message.setText("")
		elif self.Results == 0:
			self.Result.setText("请搜索后进行数据保存。")
			self.Show_message.setText("")
		elif self.save_name == "":
			self.Result.setText("请输入文件名称后进行保存(默认保存为txt)。")
			self.Show_message.setText("")
		elif self.result_num == 0:
			self.Result.setText("当前搜索无结果，无法进行数据保存。")
			self.Show_message.setText("")
		else:
			with open(self.all_path,"a",encoding="utf-8") as f3:
				for i in range(0,self.result_num):
					f3.write(str(self.fofa_result['results'][i][0]))
					f3.write('\n')
			self.Show_message.setText("文件保存成功。")




    	
if __name__ == "__main__":
    #固定的，PyQt5程序都需要QApplication对象。sys.argv是命令行参数列表，确保程序可以双击运行
    app = QApplication(sys.argv)
    #初始化
    myWin = MyMainForm()
    #将窗口控件显示在屏幕上
    myWin.show()
    #程序运行，sys.exit方法确保程序完整退出。
    sys.exit(app.exec_())









